<!--
 * Copyright (C) 2002-2003 Islami Bank Bangladesh Limited
 *
 * Original author: harun
 * Date: 9/1/13(2:16 PM)
 * Last modification by: harun: harun $
 * Last modification on : 9/1/13 (2:16 PM) $
 * Current revision: : 1.1 $
 *
 * Revision History:
 -->

<!DOCTYPE hibernate-configuration PUBLIC
        "-//Hibernate/Hibernate Configuration DTD 3.0//EN"
        "http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd">

<hibernate-configuration>

    <session-factory>

        <!-- Database connection settings -->
        <property name="hibernate.connection.driver_class">com.mysql.jdbc.Driver</property>
        <property name="hibernate.dialect">org.hibernate.dialect.MySQLDialect</property>
        <property name="hibernate.connection.url">jdbc:mysql://localhost:3306/dweller</property>
        <property name="hibernate.connection.username">root</property>
        <property name="hibernate.connection.password">root123</property>
        <!--<property name="hibernate.default_schema">eibsportal</property>-->

        <!-- Auto-commit is a bad thing -->
        <property name="hibernate.connection.autocommit">false</property>
        <!--<property name="hibernate.connection.autoReconnect">true</property>-->


        <!--
                ###########################
                ### C3P0 Connection Pool###
                ###########################
        -->
        <property name="hibernate.c3p0.max_size">250</property>
        <property name="hibernate.c3p0.min_size">3</property>
        <property name="hibernate.c3p0.timeout">300</property>
        <property name="hibernate.c3p0.max_statements">200</property>
        <property name="hibernate.c3p0.idle_test_period">300</property>
        <property name="hibernate.c3p0.acquire_increment">2</property>
        <property name="hibernate.c3p0.validation">false</property>


        <!-- JDBC connection pool (use the built-in) -->
        <!--<property name="connection.pool_size">1</property>-->

        <property name="hibernate.connection.provider_class">
            org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider
        </property>
        <!--      <property name="hibernate.connection.provider_class">org.hibernate.connection.DatasourceConnectionProvider</property> -->
        <!--      <property name="hibernate.connection.provider_class">org.hibernate.connection.ProxoolConnectionProvider</property>-->

        <!--
                  #######################
                  ### Transaction API ###
                  #######################
                  -->

        <!-- ## the Transaction API abstracts application code from the underlying JTA or JDBC transactions -->

        <property name="hibernate.transaction.factory_class">
            org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
        </property>
        <!--     <property name="hibernate.transaction.factory_class">org.hibernate.transaction.JTATransactionFactory</property>-->

        <!--
                  ##############################
                  ### Miscellaneous Settings ###
                  ##############################
                  -->

        <!-- ## print all generated SQL to the console -->

        <property name="hibernate.show_sql">false</property>

        <property name="format_sql">true</property>

        <!-- ## specify a JDBC isolation level -->
        <!-- <property name"hibernate.connection.isolation">4</property> -->

        <!-- ## set the JDBC fetch size -->
        <property name="hibernate.jdbc.fetch_size">25</property>

        <!-- ## set the maximum JDBC 2 batch size (a nonzero value enables batching) -->
        <!-- <property name="hibernate.jdbc.batch_size">30</property> -->
        <property name="hibernate.jdbc.batch_size">0</property>

        <!-- ## enable use of JDBC 2 scrollable ResultSets (specifying a Dialect will cause Hibernate to use a sensible default) -->
        <property name="hibernate.jdbc.use_scrollable_resultset">true</property>

        <!-- ## use streams when writing binary types to / from JDBC -->
        <property name="hibernate.jdbc.use_streams_for_binary">true</property>

        <!-- ## specify a default schema for unqualified tablenames -->
        <!-- #hibernate.default_schema test -->

        <!-- ## enable outerjoin fetching (specifying a Dialect will cause Hibernate to use sensible default) -->
        <property name="hibernate.use_outer_join">true</property>

        <!-- ## use a custom stylesheet for XML generation (if not specified, hibernate-default.xslt will be used) -->
        <!-- #hibernate.xml.output_stylesheet C:/Hibernate/net/sf/hibernate/hibernate-default.xslt -->

        <!-- ## set the maximum depth of the outer join fetch tree -->
        <!-- <property name"hibernate.max_fetch_depth">1</property> -->
        <property name="hibernate.max_fetch_depth">5</property>

        <!-- ## enable CGLIB reflection optimizer (enabled by default) -->
        <!-- <property name="hibernate.cglib.use_reflection_optimizer">false</property> -->

        <property name="hibernate.cache.provider_class">org.hibernate.cache.internal.NoCachingRegionFactory</property>
        <!-- ##TODO: enable the query cache -->
        <!--<property name="hibernate.cache.use_query_cache">true</property>-->

        <!-- ## choose a cache implementation -->
        <!-- #hibernate.cache.provider_class org.ehcache.hibernate.Provider -->
        <!-- #hibernate.cache.provider_class org.hibernate.cache.EmptyCacheProvider -->
        <!-- #hibernate.cache.provider_class org.hibernate.cache.HashtableCacheProvider -->
        <!-- #hibernate.cache.provider_class org.hibernate.cache.TreeCacheProvider -->
        <!--<property name="hibernate.cache.provider_class">org.hibernate.cache.OSCacheProvider</property>-->
        <!-- #hibernate.cache.provider_class org.hibernate.cache.JCSCacheProvider -->
        <!-- #hibernate.cache.provider_class org.hibernate.cache.SwarmCacheProvider -->

        <property name="hibernate.statement_cache.size">10</property>

        <!-- Drop and re-create the database schema on startup -->
        <!--<property name="hbm2ddl.auto">create</property>-->
        <!--<property name="hbm2ddl.format">true</property>-->

        <!--- create mapping resources -->
        <mapping resource="com/condo/profile/dao/hbm/Profile.hbm.xml"/>
        <mapping resource="com/condo/menu/dao/hbm/Menu.hbm.xml"/>
        <mapping resource="com/condo/visitor/dao/hbm/VisitorInfo.hbm.xml"/>


    </session-factory>

</hibernate-configuration>